// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ================== ROLE =================
model Role {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(255)
  description String       @db.VarChar(255)
  users       User[]
}

// ================== USER =================
model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique @db.VarChar(255)
  photo      String       @db.VarChar(255)
  name       String       @db.VarChar(255)
  role       Role         @relation(fields: [roleId], references: [id])
  roleId     Int          
  //relation for my own teams and other teams where I belong
  myTeams    Team[]       @relation(name: "teacher")
  teams      UserTeam[]   
  //relation posts
  posts      Post[]
  PostComent PostComment[]
}

// ================== TEAM =================
model Team {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(255)
  teacher     User         @relation(fields: [teacherId], references: [id], name: "teacher")
  teacherId   Int          
  members     UserTeam[]   
}

// ================== USERTEAM ================
model UserTeam {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  team        Team         @relation(fields: [teamId], references: [id])
  teamId      Int
  charge      String       @db.VarChar(255)
}
  
// ================== POST =================
model Post {
  id          Int          @id @default(autoincrement())
  title       String       @db.VarChar(255)
  description String       @db.VarChar(255)
  //relation user
  author      User         @relation(fields: [authorId], references: [id])
  authorId    Int
  //relation comment
  PostComent  PostComment[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

// ================== COMMENTS =================
model PostComment {
  id          Int      @id @default(autoincrement())
  description String   @db.VarChar(255)
  featured    Boolean
  //relation post
  posts       Post     @relation(fields: [postId], references: [id])
  postId      Int
  //relation user
  author      User     @relation(fields: [authorId], references: [id])
  authorId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
